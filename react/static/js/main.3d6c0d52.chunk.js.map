{"version":3,"sources":["home.js","translation.js","index.js"],"names":["Title","InputForm","props","state","value","toWordCloud","handleChange","bind","event","this","setState","target","onSubmit","handleSubmit","type","onChange","placeholder","to","React","Component","Home","am4core","am4themes_animated","WordCloud","error","isLoaded","data","translated","originalText","language","lcode","random","l","console","log","fetch","method","then","response","ok","json","Error","result","chart","am4plugins_wordCloud","series","push","dataFields","word","minFontSize","labels","template","tooltipText","dispose","message","id","style","width","height","WordCloudPage","text","match","params","className","App","exact","path","component","ReactDom","render","document","getElementById"],"mappings":"+PAWMA,EAAQ,WACZ,OAAO,uFAGHC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,MAAO,GAAIC,YAAa,eAEvC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAJH,E,yDAONC,GACXC,KAAKC,SAAS,CAAEN,MAAOI,EAAMG,OAAOP,QACpCK,KAAKC,SAAS,CAAEL,YAAa,cAAgBG,EAAMG,OAAOP,U,+BAI1D,OACE,oCACE,+CAAqBK,KAAKN,MAAMC,OAChC,0BAAMQ,SAAUH,KAAKI,cACnB,2BACEC,KAAK,OACLV,MAAOK,KAAKN,MAAMC,MAClBW,SAAUN,KAAKH,aACfU,YAAY,mCAEd,kBAAC,IAAD,CAAMC,GAAIR,KAAKN,MAAME,aAArB,kC,GAxBca,IAAMC,WA+BfC,EA1CF,kBACX,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,oCCCJC,IAAiBC,KAEjB,IAgBMC,E,kDACJ,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXqB,MAAO,KACPC,UAAU,EACVC,KAAM,CACJ,CAAEC,WAAYzB,EAAM0B,aAAcC,SAAU,GAAIC,MAAO,GAAIC,OAAQ,KANtD,E,gEAWE,IAAD,OACZC,EAAI,QAAUvB,KAAKP,MAAM0B,aAC/BK,QAAQC,IAAIF,GAEZG,MAAMH,EADO,CAAEI,OAAQ,QAEpBC,MAAK,SAACC,GACL,GAAIA,EAASC,GAGX,OADAN,QAAQC,IAAII,GACLA,EAASE,OAEhB,MAAM,IAAIC,SAGbJ,MACC,SAACK,GACCT,QAAQC,IAAIQ,GACZ,EAAKhC,SAAS,CAAEgB,KAAMgB,EAAQjB,UAAU,IACxC,IAAIkB,EAAQtB,IACV,WACAuB,KAEEC,EAASF,EAAME,OAAOC,KACxB,IAAIF,KAENC,EAAOnB,KAAO,EAAKvB,MAAMuB,KACzBmB,EAAOE,WAAWC,KAAO,aACzBH,EAAOE,WAAW3C,MAAQ,SAC1ByC,EAAOI,YAAc,GACrBJ,EAAOK,OAAOC,SAASC,YAAc,qBAErCnB,QAAQC,IAAI,UACZ,EAAKS,MAAQA,KAEf,SAACnB,GACC,EAAKd,SAAS,CAAEc,QAAOC,UAAU,S,6CAkBnChB,KAAKkC,OACPlC,KAAKkC,MAAMU,Y,+BAIL,IAAD,EAC2B5C,KAAKN,MAA/BqB,EADD,EACCA,MAAOC,EADR,EACQA,SADR,EACkBC,KACzB,OAAIF,EACK,uCAAaA,EAAM8B,SAChB7B,EAIR,yBAAK8B,GAAG,WAAWC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAH9C,+C,GA3EWxC,IAAMC,WAoFfwC,EApGO,SAACzD,GAAW,IACxB0D,EAAS1D,EAAM2D,MAAMC,OAArBF,KAER,OACE,oCACE,kBAAC,EAAD,CAAWhC,aAAcgC,IACzB,yBAAKG,UAAU,oBACb,8DAAWH,EAAX,wBAEF,6BACE,kBAAC,IAAD,CAAM3C,GAAG,KAAT,6DCbF+C,EAAM,kBACV,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/C,IACjC,kBAAC,IAAD,CAAO8C,KAAK,mBAAmBC,UAAWR,OAKhDS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3d6c0d52.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => (\n  <>\n    <Title />\n    <InputForm />\n  </>\n);\n\nconst Title = () => {\n  return <h1>翻訳したい言葉は？</h1>;\n};\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", toWordCloud: \"/translate/\" };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n    this.setState({ toWordCloud: \"/translate/\" + event.target.value });\n  }\n\n  render() {\n    return (\n      <>\n        <p>value of state : {this.state.value}</p>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n            placeholder=\"こんにちは\"\n          />\n          <Link to={this.state.toWordCloud}>翻訳する</Link>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4plugins_wordCloud from \"@amcharts/amcharts4/plugins/wordCloud\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nconst WordCloudPage = (props) => {\n  const { text } = props.match.params;\n\n  return (\n    <>\n      <WordCloud originalText={text} />\n      <div className=\"list-transtation\">\n        <h2>元の言葉は {text} です。</h2>\n      </div>\n      <div>\n        <Link to=\"/\">別の言葉を翻訳する</Link>\n      </div>\n    </>\n  );\n};\n\nclass WordCloud extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [\n        { translated: props.originalText, language: \"\", lcode: \"\", random: 2 },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    const l = \"/api/\" + this.props.originalText;\n    console.log(l);\n    var myInit = { method: \"GET\" };\n    fetch(l, myInit)\n      .then((response) => {\n        if (response.ok) {\n          // ステータスがokならば\n          console.log(response);\n          return response.json(); // レスポンスをテキストとして変換する\n        } else {\n          throw new Error();\n        }\n      })\n      .then(\n        (result) => {\n          console.log(result);\n          this.setState({ data: result, isLoaded: true });\n          var chart = am4core.create(\n            \"chartdiv\",\n            am4plugins_wordCloud.WordCloud\n          );\n          var series = chart.series.push(\n            new am4plugins_wordCloud.WordCloudSeries()\n          );\n          series.data = this.state.data;\n          series.dataFields.word = \"translated\";\n          series.dataFields.value = \"random\";\n          series.minFontSize = 12;\n          series.labels.template.tooltipText = \"{language} {lcode}\";\n\n          console.log(\"Hi ^-^\");\n          this.chart = chart;\n        },\n        (error) => {\n          this.setState({ error, isLoaded: true });\n        }\n      );\n  }\n\n  // componentDidUpdate() {\n  //   var series = this.chart.series.push(\n  //     new am4plugins_wordCloud.WordCloudSeries()\n  //   );\n\n  //   series.data = this.state.data;\n  //   series.dataFields.word = \"translated\";\n  //   series.dataFields.value = \"random\";\n  //   series.minFontSize = 12;\n  //   series.labels.template.tooltipText = \"{language} {lcode}\";\n  // }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    const { error, isLoaded, data } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"550px\" }}></div>\n      );\n    }\n  }\n}\n\nexport default WordCloudPage;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Home from \"./home\";\nimport WordCloudPage from \"./translation\";\n\nconst App = () => (\n  <BrowserRouter>\n    <div>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/translate/:text\" component={WordCloudPage} />\n    </div>\n  </BrowserRouter>\n);\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}